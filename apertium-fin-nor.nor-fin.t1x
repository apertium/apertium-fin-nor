<?xml version="1.0" encoding="UTF-8"?>
<transfer default="chunk">
  <section-def-cats>
    <def-cat n="noun">
      <cat-item tags="n.*"/>
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="propn">
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="adp">
      <cat-item tags="pr"/>
    </def-cat>
    <def-cat n="cnjcoo">
      <cat-item tags="cnjcoo"/>
      <cat-item tags="cnjcoo.*"/>
    </def-cat>
    <def-cat n="card">
      <cat-item tags="det.qnt.un.pl"/>
      <cat-item tags="det.qnt.un.pl.*"/>
        <!-- more than card  but cannot enumerate lemmas :-( -->
      <cat-item tags="num.card.*"/>
    </def-cat>
    <def-cat n="for">
      <cat-item lemma="for" tags="pr"/>
    </def-cat>
    <def-cat n="i">
      <cat-item lemma="i" tags="pr"/>
      <cat-item lemma="I" tags="pr"/>
    </def-cat>
    <def-cat n="å">
      <cat-item lemma="å" tags="part"/>
    </def-cat>
    <def-cat n="ord">
      <cat-item tags="adj.ord.*"/>
    </def-cat>
    <def-cat n="adj">
      <cat-item tags="adj.*"/>
    </def-cat>
    <def-cat n="har">
      <cat-item lemma="ha" tags="vblex.pres"/>
      <cat-item lemma="ha" tags="vaux.pres"/>
    </def-cat>
    <def-cat n="participle">
      <cat-item tags="vblex.pp"/>
      <cat-item tags="vblex.pstv.pp"/>
    </def-cat>
    <def-cat n="passive">
      <cat-item tags="vblex.*.pasv"/>
    </def-cat>
    <def-cat n="verb">
      <cat-item tags="vblex.*"/>
      <cat-item tags="vaux.*"/>
    </def-cat>
    <def-cat n="finverb">
      <cat-item tags="vblex.pret"/>
      <cat-item tags="vblex.imp"/>
      <cat-item tags="vblex.pres"/>
      <cat-item tags="vblex.pstv.pres"/>
    </def-cat>
    <def-cat n="infverb">
      <cat-item tags="vblex.inf"/>
      <cat-item tags="vblex.pstv.inf"/>
    </def-cat>
    <def-cat n="personal">
      <cat-item tags="prn.pers.*"/>
    </def-cat>
    <def-cat n="art">
      <cat-item lemma="en" tags="det.*"/>
      <cat-item lemma="den" tags="det.*"/>
      <cat-item lemma="denne" tags="det.*"/>
      <cat-item lemma="dette" tags="det.*"/>
    </def-cat>
    <def-cat n="pron">
      <cat-item tags="prn.*"/>
      <cat-item tags="det.*"/>
    </def-cat>
    <def-cat n="punct">
      <cat-item tags="sent"/>
      <cat-item tags="punct"/>
      <cat-item tags="sym"/>
      <cat-item tags="cm"/>
      <cat-item tags="cm.*"/>
      <cat-item tags="lquot"/>
      <cat-item tags="rquot"/>
    </def-cat>
  </section-def-cats>

  <section-def-attrs>
    <def-attr n="a_case">
      <attr-item tags="nom"/>
    </def-attr>
    <def-attr n="a_noun">
      <attr-item tags="n"/>
      <attr-item tags="np"/>
      <!-- XXX: only uncomment when debugging to see the stuffs - ->
      <attr-item tags="np.org"/>
      <attr-item tags="np.cog"/>
      <attr-item tags="np.top"/>
      <attr-item tags="np.al"/>
      <attr-item tags="np.ant"/>
      <attr-item tags="np.ant.f"/>
      <attr-item tags="np.ant.m"/>
      <attr-item tags="n.m"/>
      <attr-item tags="n.f"/>
      <attr-item tags="n.nt"/>
      <!- - -->
    </def-attr>
    <def-attr n="a_verb">
      <attr-item tags="vblex"/>
      <attr-item tags="vaux"/>
    </def-attr>
    <def-attr n="a_pron">
      <attr-item tags="prn"/>
      <attr-item tags="det"/>
      <attr-item tags="adj"/>
      <attr-item tags="adj.pst"/>
      <attr-item tags="num"/>
      <attr-item tags="num.card"/>
    </def-attr>
    <def-attr n="a_tense">
      <attr-item tags="pres"/>
      <attr-item tags="pret"/>
      <attr-item tags="pri"/>
      <attr-item tags="past"/>
      <attr-item tags="imp"/>
    </def-attr>
    <def-attr n="a_ord">
      <attr-item tags="adj.ord.pst"/>
    </def-attr>
    <def-attr n="a_adj">
      <attr-item tags="adj"/>
      <attr-item tags="adj.ord"/>
    </def-attr>
    <def-attr n="a_number">
      <attr-item tags="sg"/>
      <attr-item tags="sp"/>
      <attr-item tags="pl"/>
    </def-attr>
    <def-attr n="a_person">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
    </def-attr>
    <def-attr n="a_comp">
      <attr-item tags="comp"/>
      <attr-item tags="pst"/>
      <attr-item tags="sup"/>
    </def-attr>
    <def-attr n="a_punct">
      <attr-item tags="punct"/>
      <attr-item tags="sym"/>
    </def-attr>
    <def-attr n="a_cnjcoo">
      <attr-item tags="cnjcoo"/> <!-- hack to remove @nkon -->
    </def-attr>
  </section-def-attrs>

  <section-def-vars>
    <def-var n="case"/>
    <def-var n="adpcase"/>
    <def-var n="maybeadp"/>
    <def-var n="number"/>
    <def-var n="tense"/>
    <def-var n="person"/>
    <def-var n="prodrop"/>
    <def-var n="comparison"/>
  </section-def-vars>

  <section-def-macros>
    <def-macro n="adp-mangler" npar="1">
      <choose>
        <!-- adp to case mappigngs -->
        <!-- based on adp lexeme only -->
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="I"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="ine"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="i"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="ine"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="fra"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="ela"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="om"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="ela"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="frå"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="ela"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="til"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="ill"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="på"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="ade"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="ved"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="ade"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="av"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="abl"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="for"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="all"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="uten"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="abe"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="som"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="ess"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="På"/></equal>
          </test>
          <let>
            <var n="adpcase"/>
            <lit-tag v="tra"/>
          </let>
          <let>
            <var n="maybeadp"/>
            <lit v=""/>
          </let>
        </when>
        <!-- otherwise, pri -->
        <otherwise>
          <let>
            <var n="adpcase"/>
            <lit-tag v="gen"/> <!-- XXX: adp case based on fin verb -->
          </let>
          <let>
            <var n="maybeadp"/>
            <clip pos="1" side="tl" part="whole"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="personal-mangler" npar="1">
      <choose>
        <!-- personal mappigngs -->
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="a_number"/><lit-tag v="sg"/></equal>
              <equal><clip pos="1" side="sl" part="a_person"/><lit-tag v="p1"/></equal>
            </and>
          </test>
          <let>
            <var n="person"/>
            <lit-tag v="p1.sg"/>
          </let>
          <let>
            <var n="prodrop"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="a_number"/><lit-tag v="sg"/></equal>
              <equal><clip pos="1" side="sl" part="a_person"/><lit-tag v="p2"/></equal>
            </and>
          </test>
          <let>
            <var n="person"/>
            <lit-tag v="p2.sg"/>
          </let>
          <let>
            <var n="prodrop"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="a_number"/><lit-tag v="sg"/></equal>
              <equal><clip pos="1" side="sl" part="a_person"/><lit-tag v="p3"/></equal>
            </and>
          </test>
          <let>
            <var n="person"/>
            <lit-tag v="p3.sg"/>
          </let>
          <let>
            <var n="prodrop"/>
            <clip pos="1" side="tl" part="whole"/> <!-- no can drop p3 -->
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="a_number"/><lit-tag v="pl"/></equal>
              <equal><clip pos="1" side="sl" part="a_person"/><lit-tag v="p1"/></equal>
            </and>
          </test>
          <let>
            <var n="person"/>
            <lit-tag v="p1.pl"/>
          </let>
          <let>
            <var n="prodrop"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="a_number"/><lit-tag v="pl"/></equal>
              <equal><clip pos="1" side="sl" part="a_person"/><lit-tag v="p2"/></equal>
            </and>
          </test>
          <let>
            <var n="person"/>
            <lit-tag v="p2.pl"/>
          </let>
          <let>
            <var n="prodrop"/>
            <lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="a_number"/><lit-tag v="pl"/></equal>
              <equal><clip pos="1" side="sl" part="a_person"/><lit-tag v="p3"/></equal>
            </and>
          </test>
          <let>
            <var n="person"/>
            <lit-tag v="p3.pl"/>
          </let>
          <let>
            <var n="prodrop"/>
            <clip pos="1" side="tl" part="whole"/> <!-- no can drop p3 -->
          </let>
        </when>
        <!-- otherwise, pri -->
        <otherwise>
          <let>
            <var n="person"/><lit-tag v="p3.sg"/>
          </let>
          <let>
            <var n="prodrop"/><clip pos="1" side="tl" part="whole"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="person-mangler" npar="1">
      <choose>
        <!-- person mappigngs -->
        <!-- based on verb form only -->
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="imp"/></equal>
          </test>
          <let>
            <var n="person"/>
            <lit-tag v="p2.sg"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="pres"/></equal>
          </test>
          <let>
            <var n="person"/>
            <lit-tag v="p3.sg"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="pret"/></equal>
          </test>
          <let>
            <var n="person"/>
            <lit-tag v="p3.sg"/>
          </let>
        </when>
        <!-- otherwise, pri -->
        <otherwise>
          <let>
            <var n="person"/><lit-tag v="p3.sg"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="comp-mangler" npar="1">
      <choose>
        <!-- tense mappigngs -->
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_comp"/><lit-tag v="comp"/></equal>
          </test>
          <let>
            <var n="comparison"/>
            <lit-tag v="comp"/>
          </let>
        </when>
        <!-- otherwise, pri -->
        <otherwise>
          <let>
            <clip pos="1" side="tl" part="a_comp"/><lit-tag v="pst"/>
          </let>
          <let>
            <var n="comparison"/><lit-tag v="pst"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="tense-mangler" npar="1">
      <choose>
        <!-- tense mappigngs -->
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="pret"/></equal>
          </test>
          <let>
            <var n="tense"/>
            <lit-tag v="past"/>
          </let>
        </when>
        <!-- otherwise, pri -->
        <otherwise>
          <let>
            <clip pos="1" side="tl" part="a_tense"/><lit-tag v="pri"/>
          </let>
          <let>
            <var n="tense"/><lit-tag v="pri"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="number-mangler" npar="1">
      <choose>
        <!-- nunber mappigngs -->
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_number"/><lit-tag v="sg"/></equal>
          </test>
          <let>
            <var n="number"/>
            <lit-tag v="sg"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_number"/><lit-tag v="pl"/></equal>
          </test>
          <let>
            <var n="number"/>
            <lit-tag v="pl"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_number"/><lit-tag v="sp"/></equal>
          </test>
          <let>
            <var n="number"/>
            <lit-tag v="sg"/>
          </let>
        </when>
        <!-- otherwise, sg -->
        <otherwise>
          <let>
            <clip pos="1" side="tl" part="a_number"/><lit-tag v="sg"/>
          </let>
          <let>
            <var n="number"/><lit-tag v="sg"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="case-mangler" npar="1">
      <choose>
        <!-- case mappigngs -->
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="acc"/></equal>
          </test>
          <let>
            <var n="case"/>
            <lit-tag v="gen"/>
          </let>
        </when>
        <!-- otherwise, nom -->
        <otherwise>
          <let>
            <clip pos="1" side="tl" part="a_case"/><lit-tag v="nom"/>
          </let>
          <let>
            <var n="case"/><lit-tag v="nom"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
  </section-def-macros>

  <section-rules>
    <rule comment="adp art adj noun">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="art"/>
        <pattern-item n="adj"/>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="comp-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <chunk name="adpnoun" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP"/></tag>
              <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <var n="comparison"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="4" side="tl" part="lem"/>
              <clip pos="4" side="tl" part="a_noun"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="maybeadp"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adp art noun">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="art"/>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="adpnoun" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP"/></tag>
              <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_noun"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="maybeadp"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="art adj noun">
      <pattern>
        <pattern-item n="art"/>
        <pattern-item n="adj"/>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="number-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="comp-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="noun" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_adj"/>
              <var n="comparison"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_noun"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="har participle">
      <pattern>
        <pattern-item n="har"/>
        <pattern-item n="participle"/>
      </pattern>
      <action>
        <call-macro n="personal-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="tense-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="verb" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="VP.PERF"/></tag>
            </tags>
            <lu>
              <lit v="olla"/>
              <lit-tag v="vaux.actv"/>
              <var n="tense"/>
              <var n="person"/>
            </lu>
            <b pos="0"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <lit-tag v="actv.pp.pst.sg.nom"/> <!-- XXX: or pasv -->
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="person verb">
      <pattern>
        <pattern-item n="personal"/>
        <pattern-item n="finverb"/>
      </pattern>
      <action>
        <call-macro n="personal-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="tense-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="verb" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="VP"/></tag>
              <tag><var n="tense"/></tag>
              <tag><var n="person"/></tag>
            </tags>
            <lu>
              <var n="prodrop"/>
            </lu>
            <b pos="0"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <lit-tag v="actv"/>
              <var n="tense"/>
              <var n="person"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adp propn propn">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="propn"/>
        <pattern-item n="propn"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="adpnoun" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP"/></tag>
              <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_noun"/>
              <var n="number"/>
              <lit-tag v="nom"/>
            </lu>
            <b pos="0"/>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_noun"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="maybeadp"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adp noun">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="adpnoun" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP"/></tag>
              <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_noun"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="0"/>
            <lu>
              <var n="maybeadp"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="num noun">
      <pattern>
        <pattern-item n="card"/>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="comp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="count" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NUMP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <lit-tag v="num"/> <!-- num not det -->
              <lit-tag v="card"/> <!-- card -->
              <lit-tag v="sg"/> <!-- pl in nor is broken -->
              <lit-tag v="nom"/> <!-- pl in nor is broken -->
            </lu>
            <b pos="0"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_noun"/>
              <lit-tag v="sg"/> <!-- pl in nor is broken -->
              <lit-tag v="par"/> <!-- pl in nor is broken -->
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="stray verb">
      <pattern>
        <pattern-item n="finverb"/>
      </pattern>
      <action>
        <call-macro n="person-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="tense-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="verb" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="actv"/>
              <var n="tense"/>
              <var n="person"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="passive">
      <pattern>
        <pattern-item n="passive"/>
      </pattern>
      <action>
        <call-macro n="tense-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="pasv" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V.PASV"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="pasv"/>
              <var n="tense"/>
              <lit-tag v="impers"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="i år – vuonna">
      <pattern>
        <pattern-item n="i"/>
        <pattern-item n="card"/>
      </pattern>
      <action>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="comp-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="year" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NUMP"/></tag>
            </tags>
            <lu>
              <lit v="vuonna"/>
              <lit-tag v="adv"/>
            </lu>
            <b pos="0"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <lit-tag v="num"/> <!-- num not det -->
              <lit-tag v="card"/> <!-- card -->
              <lit-tag v="sg"/> <!-- pl in nor is broken -->
              <lit-tag v="nom"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="num">
      <pattern>
        <pattern-item n="card"/>
      </pattern>
      <action>
        <call-macro n="number-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="comp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="card" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NUM"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <lit-tag v="num"/> <!-- num not det -->
              <lit-tag v="card"/> <!-- card -->
              <lit-tag v="sg"/> <!-- pl in nor is broken -->
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="participle">
      <pattern>
        <pattern-item n="participle"/>
      </pattern>
      <action>
        <out>
          <chunk name="pcp" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="ADJ"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="pasv.pp.pst.sg.nom"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="for Å infinitive">
      <pattern>
        <pattern-item n="for"/>
        <pattern-item n="å"/>
        <pattern-item n="infverb"/>
      </pattern>
      <action>
        <out>
          <chunk name="inf" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V.INF.TRA"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_verb"/>
              <lit-tag v="actv.infa.tra.px3sp"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="infinitive">
      <pattern>
        <pattern-item n="infverb"/>
      </pattern>
      <action>
        <out>
          <chunk name="inf" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V.INF"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="actv.infa.sg.lat"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="pron">
      <pattern>
        <pattern-item n="pron"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="pron" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PRN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_pron"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="art noun">
      <pattern>
        <pattern-item n="art"/>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="noun" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_noun"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="noun">
      <pattern>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="noun" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="N"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_noun"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="ord">
      <pattern>
        <pattern-item n="ord"/>
      </pattern>
      <action>
        <call-macro n="number-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="comp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="ord" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="ADJ"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_ord"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adj">
      <pattern>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <call-macro n="number-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="comp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="adj" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="ADJ"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <var n="comparison"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="cnjcoo">
      <pattern>
        <pattern-item n="cnjcoo"/>
      </pattern>
      <action>
        <out>
          <chunk name="cnjcoo" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="CC"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_cnjcoo"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="puncts">
      <pattern>
        <pattern-item n="punct"/>
      </pattern>
      <action>
        <out>
          <chunk name="sent" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SENT"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_punct"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
  </section-rules>
</transfer>

<!--
Resources:
    https://wiki.apertium.org/wiki/Chunking:_A_full_example
    https://wiki.apertium.org/wiki/Chunking
    https://wiki.apertium.org/wiki/Apertium_New_Language_Pair_HOWTO#Transfer_rules
    https://wiki.apertium.org/wiki/A_long_introduction_to_transfer_rules
    https://wiki.apertium.org/wiki/Transfer#Adding_structural_transfer_.28grammar.29_rules
-->

